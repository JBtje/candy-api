openapi: 3.0.0
x-samples-languages: ['curl', 'node', 'php', 'javascript', 'python']
info:
  title: GetCandy
  contact:
    name: GetCandy
    url: 'https://getcandy.io'
    email: support@getcandy.io
  version: 1.0.0
  license:
    name: MIT
  description: The GetCandy API
servers:
  - url: 'http://localhost:3000/api/v1'
paths:
  /addresses:
    $ref: './addresses/paths/addresses.yaml'
  '/addresses/{addressId}':
    $ref: './addresses/paths/addresses.id.yaml'
  /channels:
    $ref: './channels/paths/channels.yaml'
  '/channels/{channelId}':
    $ref: './channels/paths/channels.id.yaml'
  /customers:
    $ref: './customers/paths/customers.yaml'
  '/customers/{customerId}/users':
    $ref: './customers/paths/customers.id.users.yaml'
  '/customers/{customerId}/customer-groups':
    $ref: './customers/paths/customers.id.customer-groups.yaml'
  '/customers/{customerId}':
    $ref: './customers/paths/customers.id.yaml'
  '/countries':
    $ref: './countries/paths/countries.yaml'
  '/countries/{countryId}':
    $ref: './countries/paths/countries.id.yaml'
  '/customer-groups':
    $ref: './customer-groups/paths/customer-groups.yaml'
  '/customer-groups/{customerGroupId}':
    $ref: './customer-groups/paths/customer-groups.id.yaml'
  /languages:
    $ref: './languages/paths/languages.yaml'
  '/languages/{languageId}':
    $ref: './languages/paths/languages.id.yaml'
  /routes:
    $ref: './routes/paths/routes.yaml'
  '/routes/{routeId}':
    $ref: './routes/paths/routes.id.yaml'
  '/routes/search':
    $ref: './routes/paths/routes.search.yaml'
  /product-families:
    $ref: './product-families/paths/product-families.yaml'
  '/product-families/{productFamilyId}':
    $ref: './product-families/paths/product-families.id.yaml'
  /baskets:
    $ref: './baskets/paths/baskets.yaml'
  '/baskets/{basketId}/meta':
    $ref: './baskets/paths/baskets.id.meta.yaml'
  /baskets/resolve:
    $ref: './baskets/paths/baskets.resolve.yaml'
  /baskets/current:
    $ref: './baskets/paths/baskets.current.yaml'
  '/baskets/{basketId}/save':
    $ref: './baskets/paths/baskets.id.save.yaml'
  '/baskets/{basketId}/claim':
    $ref: './baskets/paths/baskets.id.claim.yaml'
  '/baskets/{basketId}':
    $ref: './baskets/paths/baskets.id.yaml'
  /baskets/saved:
    $ref: './baskets/paths/baskets.saved.yaml'
  '/baskets/saved/{basketId}':
    $ref: './baskets/paths/baskets.saved.id.yaml'
  '/baskets/{basketId}/discounts':
    $ref: './baskets/paths/baskets.id.discounts.yaml'
  /basket-lines:
    $ref: './basket-lines/paths/basket-lines.yaml'
  '/basket-lines/{basketLineId}':
    $ref: './basket-lines/paths/basket-lines.id.yaml'
  '/basket-lines/{basketLineId}/add':
    $ref: './basket-lines/paths/basket-lines.id.add.yaml'
  '/basket-lines/{basketLineId}/remove':
    $ref: './basket-lines/paths/basket-lines.id.remove.yaml'
### BELOW: Paths that have had OpenAPI spec moved but not moved to actions
  /orders:
    $ref: './orders/paths/orders.yaml'
  '/orders/{orderId}':
    $ref: './orders/paths/orders.id.yaml'
  /orders/types:
    $ref: './orders/paths/orders.types.yaml'
  /orders/process:
    $ref: './orders/paths/orders.process.yaml'
  '/orders/email-preview/{status}':
    $ref: './orders/paths/orders.email-preview.status.yaml'
  /orders/bulk:
    $ref: './orders/paths/orders.bulk.yaml'
  '/orders/{orderId}/expire':
    $ref: './orders/paths/orders.id.expire.yaml'
  '/orders/{orderId}/shipping/address':
    $ref: './orders/paths/orders.id.shipping.address.yaml'
  '/orders/{orderId}/shipping/methods':
    $ref: './orders/paths/orders.id.shipping.methods.yaml'
  '/orders/{orderId}/shipping/cost':
    $ref: './orders/paths/orders.id.shipping.cost.yaml'
  '/orders/{orderId}/contact':
    $ref: './orders/paths/orders.id.contact.yaml'
  '/orders/{orderId}/billing/address':
    $ref: './orders/paths/orders.id.billing.address.yaml'
  '/orders/{orderId}/lines':
    $ref: './orders/paths/orders.id.lines.yaml'
  '/orders/lines/{orderLineId}':
    $ref: './orders/paths/orders.lines.id.yaml'
  '/orders/{orderId}/invoice':
    $ref: './orders/paths/orders.id.invoice.yaml'
  '/products/recommended':
    $ref: './products/paths/products.recommended.yaml'
  '/products/{productId}':
    $ref: './products/paths/products.id.yaml'
  '/products/variants':
    $ref: './products/paths/products.variants.yaml'
  '/products/variants/{productVariantId}':
    $ref: './products/paths/products.variants.id.yaml'
  '/products/variants/{productVariantId}/inventory':
    $ref: './products/paths/products.variants.id.inventory.yaml'
  '/products/{productId}/duplicate':
    $ref: './products/paths/products.id.duplicate.yaml'
  '/products/{productId}/urls':
    $ref: './products/paths/products.id.urls.yaml'
  '/products/{productId}/redirects':
    $ref: './products/paths/products.id.redirects.yaml'
  '/products/{productId}/attributes':
    $ref: './products/paths/products.id.attributes.yaml'
  '/products/{productId}/collections':
    $ref: './products/paths/products.id.collections.yaml'
  '/products/{productId}/categories':
    $ref: './products/paths/products.id.categories.yaml'
  '/products/{productId}/channels':
    $ref: './products/paths/products.id.channels.yaml'
  '/products/{productId}/categories/{categoryId}':
    $ref: './products/paths/products.id.categories.id.yaml'
  '/products/{productId}/collections/{collectionId}':
    $ref: './products/paths/products.id.collections.id.yaml'
  '/products/{productId}/associations':
    $ref: './products/paths/products.id.associations.yaml'
  '/products/{productId}/customer-groups':
    $ref: './products/paths/products.id.customer-groups.yaml'
  '/products/{productId}/drafts':
    $ref: './products/paths/products.id.drafts.yaml'
  '/products/{productId}/publish':
    $ref: './products/paths/products.id.publish.yaml'
  /attributes:
    $ref: './attributes/paths/attributes.yaml'
  /attributes/order:
    $ref: './attributes/paths/attributes.order.yaml'
  '/attributes/{attributeId}':
    $ref: './attributes/paths/attributes.id.yaml'
  /attribute-groups:
    $ref: './attribute-groups/paths/attribute-groups.yaml'
  /attribute-groups/reorder:
    $ref: './attribute-groups/paths/attribute-groups.reorder.yaml'
  '/attribute-groups/{attributeGroupId}':
    $ref: './attribute-groups/paths/attribute-groups.id.yaml'
  /categories:
    $ref: './categories/paths/categories.yaml'
  '/categories/{categoryId}':
    $ref: './categories/paths/categories.id.yaml'
  '/categories/{categoryId}/layouts':
    $ref: './categories/paths/categories.id.layouts.yaml'
  '/categories/{categoryId}/routes':
    $ref: './categories/paths/categories.id.routes.yaml'
  '/categories/parent/{parentId}':
    $ref: './categories/paths/categories.parent.id.yaml'
  /categories/reorder:
    $ref: './categories/paths/categories.reorder.yaml'
  '/categories/{categoryId}/products':
    $ref: './categories/paths/categories.id.products.yaml'
  '/categories/{categoryId}/channels':
    $ref: './categories/paths/categories.id.channels.yaml'
  '/categories/{categoryId}/drafts':
    $ref: './categories/paths/categories.id.drafts.yaml'
  '/categories/{categoryId}/customer-groups':
    $ref: './categories/paths/categories.id.customer-groups.yaml'
  /assets:
    $ref: './assets/paths/assets.yaml'
  /assets/simple:
    $ref: './assets/paths/assets.simple.yaml'
  '/assets/{assetId}/detach/{ownerId}':
    $ref: './assets/paths/assets.id.detach.id.yaml'
  /taxes:
    $ref: './taxes/paths/taxes.yaml'
  '/taxes/{taxId}':
    $ref: './taxes/paths/taxes.id.yaml'
  /associations/groups:
    $ref: './associations/paths/associations.groups.yaml'
  '/collections/{collectionId}/routes':
    $ref: './collections/paths/collections.id.routes.yaml'
  '/collections/{collectionId}/products':
    $ref: './collections/paths/collections.id.products.yaml'
  /collections:
    $ref: './collections/paths/collections.yaml'
  '/collections/{collectionId}':
    $ref: './collections/paths/collections.id.yaml'
  /discounts:
    $ref: './discounts/paths/discounts.yaml'
  '/discounts/{discountId}':
    $ref: '/discounts/paths/discounts.id.yaml'
  /layouts:
    $ref: './layouts/paths/layouts.yaml'
  /users:
    $ref: './users/paths/users.yaml'
  '/users/{userId}':
    $ref: './users/paths/users.id.yaml'
  '/users/fields':
    $ref: './users/paths/users.fields.yaml'
  '/users/current':
    $ref: './users/paths/users.current.yaml'
  ### BELOW: Paths that have not been updated

  '/payments/{transactionId}/refund':
    parameters:
      - schema:
          type: string
        name: transactionId
        in: path
        required: true
    post:
      summary: Refund a payment
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                refund-issued-error:
                  value:
                    http_code: 400
                    message: Refund already issued
                invalid-balance-error:
                  value:
                    http_code: 400
                    message: Amount exceeds remaining balance
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: post-payments-id-refund
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  format: int32
                  description: 'If left blank, the full amount will be refunded'
                notes:
                  type: string
        description: ''
      description: Refund a transaction
  '/payments/{transactionId}/void':
    parameters:
      - schema:
          type: string
        name: transactionId
        in: path
        required: true
    post:
      summary: Void a payment
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: post-payments-transactionId-void
      description: Voids a payment in the system.








  /payments/3d-secure:
    post:
      summary: Threed Secure Payment
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: post-payments-3d-secure
      description: 'Validate a ThreeD secure request and process the transaaction, if your payment provider supports it.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paRes:
                  type: string
                transaction:
                  type: string
                order_id:
                  type: string
              required:
                - paRes
                - transaction
                - order_id
  /payments/provider:
    get:
      summary: Get Payment Provider
      tags:
        - Payments
      operationId: get-payments-provider
      description: 'Gets the default, configured payment provider.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProviderResponse'


  /reports/sales:
    get:
      summary: Get sales report
      tags:
        - Reports
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  labels:
                    type: array
                    items:
                      type: string
                  datasets:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        backgroundColor:
                          type: string
                        yAxisId:
                          type: string
                        borderColor:
                          type: string
                        data:
                          type: array
                          items:
                            type: string
                        fill:
                          type: boolean
              examples:
                monthly-example:
                  value:
                    labels:
                      - January 2019
                      - February 2019
                      - March 2019
                      - April 2019
                      - May 2019
                      - June 2019
                      - July 2019
                      - August 2019
                      - September 2019
                      - October 2019
                      - November 2019
                      - December 2019
                    datasets:
                      - label: Orders
                        backgroundColor: '#E7028C'
                        yAxisID: A
                        borderColor: '#E7028C'
                        data:
                          - 4803
                          - 4703
                          - 5147
                          - 4805
                          - 4964
                          - 4907
                          - 5525
                          - 4734
                          - 5210
                          - 5733
                          - 4867
                          - 3258
                        fill: false
                      - label: Revenue
                        backgroundColor: '#0099e5'
                        yAxisID: B
                        borderColor: '#0099e5'
                        data:
                          - '44492929'
                          - '42988674'
                          - '46779741'
                          - '43873165'
                          - '45938827'
                          - '47167482'
                          - '52133245'
                          - '43647302'
                          - '48852965'
                          - '54670528'
                          - '46422960'
                          - '31355558'
                        fill: false
                weekly-example:
                  value:
                    labels:
                      - Week Comm. 02/01/2020
                      - Week Comm. 06/01/2020
                      - Week Comm. 16/01/2020
                      - Week Comm. 20/01/2020
                      - Week Comm. 29/01/2020
                    datasets:
                      - label: Orders
                        backgroundColor: '#E7028C'
                        yAxisID: A
                        borderColor: '#E7028C'
                        data:
                          - 347
                          - 1297
                          - 1335
                          - 1314
                          - 1231
                        fill: false
                      - label: Revenue
                        backgroundColor: '#0099e5'
                        yAxisID: B
                        borderColor: '#0099e5'
                        data:
                          - '2980381'
                          - '13029474'
                          - '12304326'
                          - '12530776'
                          - '10988167'
                        fill: false
                daily-example:
                  value:
                    labels:
                      - 1st January 2020
                      - 2nd January 2020
                      - 3rd January 2020
                      - 4th January 2020
                      - 5th January 2020
                      - 6th January 2020
                      - 7th January 2020
                    datasets:
                      - label: Orders
                        backgroundColor: '#E7028C'
                        yAxisID: A
                        borderColor: '#E7028C'
                        data:
                          - 20
                          - 157
                          - 121
                          - 22
                          - 27
                          - 247
                          - 255
                        fill: false
                      - label: Revenue
                        backgroundColor: '#0099e5'
                        yAxisID: B
                        borderColor: '#0099e5'
                        data:
                          - '102132'
                          - '1370854'
                          - '1096602'
                          - '161444'
                          - '249349'
                          - '2925187'
                          - '2263469'
                        fill: false
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        from:
                          type: array
                          items:
                            type: string
                        to:
                          type: array
                          items:
                            type: string
              examples:
                unprocessable-example:
                  value:
                    message: The given data was invalid.
                    errors:
                      from:
                        - The from field is required.
                        - The from is not a valid date.
                      to:
                        - The to field is required.
                        - The to is not a valid date.
      operationId: get-reports-sales
      parameters:
        - schema:
            type: string
          in: query
          name: from
          description: The from date
          required: true
        - schema:
            type: string
          in: query
          name: to
          description: The to date
        - schema:
            type: string
            enum:
              - weekly
              - monthly
              - daily
          in: query
          name: mode
          description: The dataset mode
      description: |-
        This endpoints returns sales report figures.

        > Currently this provides data suitable for chartjs.org but this is subject to change and be more decoupled in a future release.
  /reports/orders:
    get:
      summary: Get sales report
      tags:
        - Reports
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    month:
                      type: string
                    sub_total:
                      type: string
                    delivery_total:
                      type: string
                    tax_total:
                      type: string
                    order_total:
                      type: string
                    discount_total:
                      type: string
              examples:
                dataset-example:
                  value:
                    - month: March 2020
                      sub_total: '2163897'
                      delivery_total: '145489'
                      tax_total: '460781'
                      order_total: '2770167'
                      discount_total: '0'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        from:
                          type: array
                          items:
                            type: string
                        to:
                          type: array
                          items:
                            type: string
              examples:
                invalid-missing-data-example:
                  value:
                    message: The given data was invalid.
                    errors:
                      from:
                        - The from field is required.
                        - The from is not a valid date.
                      to:
                        - The to field is required.
                        - The to is not a valid date.
      operationId: get-reports-orders
      description: Returns a report for orders between a given date range
      parameters:
        - schema:
            type: string
          in: query
          name: from
          description: The from date
        - schema:
            type: string
          in: query
          name: to
          description: The to date
  /reports/orders/customers:
    get:
      summary: Get Customer Report
      tags:
        - Reports
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  '202003':
                    type: object
                    properties:
                      label:
                        type: string
                      new:
                        type: integer
                      returning:
                        type: integer
                      total:
                        type: integer
              examples:
                basic-example:
                  value:
                    '202003':
                      label: March 2020
                      new: 204
                      returning: 1980
                      total: 2184
      operationId: get-reports-orders-customers
      description: Returns a monthly grouped list of new/returning and total customers.
      parameters:
        - schema:
            type: string
          in: query
          name: from
          description: The from date
        - schema:
            type: string
          in: query
          name: to
          description: The to date
  /reports/orders/averages:
    get:
      summary: Get order averages
      tags:
        - Reports
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    sub_total:
                      type: string
                    delivery_total:
                      type: string
                    tax_total:
                      type: string
                    order_total:
                      type: string
                    discount_total:
                      type: string
              examples:
                monthly-example:
                  value:
                    - date: March 2020
                      sub_total: '8303'
                      delivery_total: '519'
                      tax_total: '1762'
                      order_total: '10584'
                      discount_total: '6'
                weekly-example:
                  value:
                    - date: Week Comm. 02/03/2020
                      sub_total: '7904'
                      delivery_total: '535'
                      tax_total: '1686'
                      order_total: '10125'
                      discount_total: '0'
      operationId: get-reports-orders-averages
      parameters:
        - schema:
            type: string
          in: query
          name: from
          description: The from date
        - schema:
            type: string
          in: query
          name: to
          description: The to date
        - schema:
            type: string
            enum:
              - weekly
              - daily
              - yearly
              - monthly
          in: query
          name: mode
          description: ''
      description: Returns an array of order averages between a given date range.
  /reports/products/best-sellers:
    get:
      summary: Get best selling products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: object
                    properties:
                      products:
                        type: array
                        items:
                          type: object
                          properties:
                            product_count:
                              type: integer
                            description:
                              type: string
                            sku:
                              type: string
                            month:
                              type: string
              examples:
                result-example:
                  value:
                    '2020-02-01T10:53:53.000000Z':
                      products:
                        - product_count: 149
                          description: Bertie botts every flavor beans
                          sku: bbefb
                          month: '2020-02-01'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        from:
                          type: array
                          items:
                            type: string
                        to:
                          type: array
                          items:
                            type: string
              examples:
                unprocessable-example:
                  value:
                    message: The given data was invalid.
                    errors:
                      from:
                        - The from field is required.
                      to:
                        - The to field is required.
      operationId: get-products-best-sellers
      description: Gets best selling products grouped by month.
      tags:
        - Reports
      parameters:
        - schema:
            type: string
          in: query
          name: from
          description: The from date
        - schema:
            type: string
          in: query
          name: to
          description: The to date
    parameters: []
  '/reports/metrics/{subject}':
    parameters:
      - schema:
          type: string
          enum:
            - sales
            - orders
        name: subject
        in: path
        required: true
    get:
      summary: Get metric data
      tags:
        - Reports
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_month:
                    type: string
                  previous_month:
                    type: string
                  today:
                    type: string
                  yesterday:
                    type: string
                  current_week:
                    type: string
                  previous_week:
                    type: string
              examples:
                orders-example:
                  value:
                    current_month: 0
                    previous_month: 1077
                    today: 0
                    yesterday: 0
                    current_week: 0
                    previous_week: 0
                sales-example:
                  value:
                    current_month: 0
                    previous_month: '8626214'
                    today: 0
                    yesterday: 0
                    current_week: 0
                    previous_week: 0
      operationId: get-reports-metrics-subject
      description: Returns metric (KPI) data for either sales or orders.
  /products:
    get:
      summary: Get Products
      tags:
        - Products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCollection'
      operationId: get-products
      description: Gets a paginated list of products.
      parameters:
        - schema:
            type: string
          in: query
          name: include
        - schema:
            type: boolean
            default: true
          in: query
          name: paginated
          description: ''
          allowEmptyValue: true
        - schema:
            type: string
          in: query
          name: ids
          description: Return only the selected IDs
        - schema:
            type: integer
          in: query
          name: limit
    post:
      summary: Create Product
      tags:
        - Products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: array
                    items:
                      type: string
                  url:
                    type: array
                    items:
                      type: string
                  stock:
                    type: array
                    items:
                      type: string
                  family_id:
                    type: array
                    items:
                      type: string
                  price:
                    type: array
                    items:
                      type: string
                  sku:
                    type: array
                    items:
                      type: string
              examples:
                unprocessable-example:
                  value:
                    name:
                      - The name field is required
                    url:
                      - The url field is required.
                    stock:
                      - The stock field is required.
                    family_id:
                      - The family id field is required.
                    price:
                      - The price field is required.
                    sku:
                      - The sku field is required.
                      - The sku field must be unique
      operationId: post-products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  required:
                    - en
                  properties:
                    en:
                      type: string
                url:
                  type: string
                stock:
                  type: integer
                family_id:
                  type: string
                price:
                  type: number
                  format: float
                sku:
                  type: string
              required:
                - name
                - url
                - stock
                - family_id
                - price
                - sku
            examples:
              create-body-example:
                value:
                  name:
                    en: New Product
                  url: new-product
                  family_id: 123fw4rfs
                  price: 12.99
                  sku: newp12345
      description: Creates a new product in the system. When creating a new product will also create 1 variant for that product.
      parameters:
        - schema:
            type: string
          in: query
          name: include
  /saved-searches/product:
    get:
      summary: Get saved searches
      tags:
        - Search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearchCollection'
      operationId: get-saved-searches
      description: Returns a list of current saved searches for products
    parameters: []
  '/saved-searches/{savedSearchId}':
    parameters:
      - schema:
          type: string
        name: savedSearchId
        in: path
        required: true
    delete:
      summary: Delete saved search
      operationId: delete-saved-searches-savedSearchId
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: Delete a saved search entry by ID.
      tags:
        - Search
  /settings:
    get:
      summary: Get settings
      tags:
        - Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingCollection'
      operationId: get-settings
      description: Retrieves settings that have been defined in the database.
  '/settings/{handle}':
    parameters:
      - schema:
          type: string
        name: handle
        in: path
        required: true
    get:
      summary: Get setting
      tags:
        - Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-settings-handle
      description: Get specific settings.
  /shipping/zones:
    get:
      summary: Get Shipping Zones
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingZoneCollection'
      operationId: get-shipping-zones
      description: Returns a paginated list of shipping zones.
      parameters:
        - schema:
            type: string
          in: query
          name: include
    post:
      summary: Create Shipping Zone
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingZoneResponse'
        '404':
          description: Not Found
      operationId: post-shipping-zones
      description: Create a new shipping zone
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
  '/shipping/zones/{shippingZoneId}':
    parameters:
      - schema:
          type: string
        name: shippingZoneId
        in: path
        required: true
    get:
      summary: Get Shipping Zone
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingZoneResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-shipping-zones-shippingZoneId
      description: "Get a shipping zone by it's ID."
  '/shipping/{shippingMethodId}/prices':
    parameters:
      - schema:
          type: string
        name: shippingMethodId
        in: path
        required: true
    post:
      summary: Add shipping price
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingPriceResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  rate:
                    type: array
                    items:
                      type: string
                  zone_id:
                    type: array
                    items:
                      type: string
                  currency_id:
                    type: array
                    items:
                      type: string
              examples:
                unprocessable-example:
                  value:
                    rate:
                      - The rate field is required.
                    zone_id:
                      - The zone id field is required.
                    currency_id:
                      - The currency id field is required.
      operationId: post-shipping-id-prices
      description: Add a price to a shipping method.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rate:
                  type: number
                zone_id:
                  type: string
                currency_id:
                  type: string
              required:
                - rate
                - zone_id
                - currency_id
        description: ''
  '/shipping/prices/{shippingPriceId}':
    parameters:
      - schema:
          type: string
        name: shippingPriceId
        in: path
        required: true
    put:
      summary: Update shipping price
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingPriceResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  rate:
                    type: array
                    items:
                      type: string
                  zone_id:
                    type: array
                    items:
                      type: string
                  currency_id:
                    type: array
                    items:
                      type: string
      operationId: put-shipping-prices-shippingPriceId
      description: Update a shipping price
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rate:
                  type: integer
                zone_id:
                  type: string
                currency_id:
                  type: string
              required:
                - rate
                - zone_id
                - currency_id
  '/shipping/{shippingMethodId}/zones':
    parameters:
      - schema:
          type: string
        name: shippingMethodId
        in: path
        required: true
    put:
      summary: Update shipping method zones
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethodResponse'
      operationId: put-shipping-shippingMethodId-zones
      description: "Update a shipping method's zones."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                zones:
                  type: array
                  items:
                    type: string
              required:
                - zones
            examples:
              update-body-example:
                value:
                  zones:
                    - 1rdf4sdfs
                    - 567yhg2s3
  '/shipping/{id}/users':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Update shipping method users
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethodResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: string
      operationId: put-shipping-id-users
      description: Update shipping method users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    type: string
  /shipping:
    get:
      summary: Get shipping methods
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethodCollection'
      operationId: get-shipping
      description: Returns a paginated list of shipping methods
      parameters:
        - schema:
            type: integer
          in: query
          name: per_page
        - schema:
            type: string
          in: query
          name: include
    post:
      summary: Create shipping method
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ShippingMethod'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: array
                    items:
                      type: string
                  type:
                    type: array
                    items:
                      type: string
      operationId: post-shipping
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - standard
                    - dhl
                    - regional
                name:
                  type: object
                  properties:
                    en:
                      type: string
              required:
                - type
      description: Create a new shipping method.
      parameters: []
  '/shipping/{shippingMethodId}':
    parameters:
      - schema:
          type: string
        name: shippingMethodId
        in: path
        required: true
    get:
      summary: Get shipping methods
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethodResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-shipping-shippingMethodId
      description: "Returns a shipping method by it's ID."
      parameters:
        - schema:
            type: string
          in: query
          name: include
    put:
      summary: Update shipping method
      tags:
        - Shipping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethodResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: array
                    items:
                      type: string
                  type:
                    type: array
                    items:
                      type: string
      operationId: put-shipping-shippingMethodId
      description: "Update shipping method by it's ID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  required:
                    - en
                  properties:
                    en:
                      type: string
                type:
                  type: string
              required:
                - name
                - type
    delete:
      summary: Delete shipping method
      tags:
        - Shipping
      responses:
        '204':
          description: No Content
      operationId: delete-shipping-shippingMethodId
      description: Deletes a shipping method.
  /tags:
    get:
      summary: Get all tags
      tags:
        - Tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCollection'
      operationId: get-tags
      description: Get paginated list of tags
    post:
      summary: ''
      operationId: post-tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      description: Create a new tag
      tags:
        - Tags
  /search:
    get:
      summary: Search GetCandy
      tags:
        - Search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
      operationId: get-search
      description: |-
        Search across products or categories

        You can filter across attributes by adding key=value to the search query, for filtering multiple values use key=value1:value2
      parameters:
        - schema:
            type: string
          in: query
          name: channel
        - schema:
            type: string
          in: query
          name: category
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: string
            enum:
              - category
              - product
            default: product
          in: query
          name: search_type
        - schema:
            type: string
          in: query
          name: keywords
        - schema:
            type: boolean
          in: query
          name: rank
          description: Whether to rank results based on config
        - schema:
            type: boolean
            default: false
          in: query
          name: ids_only
          description: "Will only return result ID's, good for performance"
        - schema:
            type: string
          in: query
          name: include
        - schema:
            type: string
          in: query
          name: sort
        - schema:
            type: boolean
          in: query
          name: full_response
  '/tags/{tagId}':
    parameters:
      - schema:
          type: string
        name: tagId
        in: path
        required: true
    get:
      summary: Get a tag
      tags:
        - Tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-tags-tagId
      description: "Gets a tag by it's ID"
    put:
      summary: Update a tag
      tags:
        - Tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: array
                    items:
                      type: string
      operationId: put-tags-tagId
      description: "Updates a tag by it's ID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
        description: ''
    delete:
      summary: Delete a tag
      tags:
        - Tags
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: delete-tags-tagId
      description: "Deletes a tag by it's ID"


  '/users/payments/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: Delete reusable payment
      tags:
        - Payments
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthenticated'
      operationId: delete-users-payments-id
      description: Removes a users reusable payment method. This can be invoked by any admin user and also the user who the record belongs to.
  /account/password:
    post:
      summary: Reset  password
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                password-changed-example:
                  value:
                    message: Pasword changed
      operationId: post-account-password
      description: Allows the current user to update their password.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPasswordResetBody'
  /recycle-bin:
    get:
      summary: Get records
      tags:
        - Recycle Bin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecycleBinCollection'
      operationId: get-recycle-bin
      description: Returns a paginated list of all recycle bin items.
  '/recycle-bin/{itemId}':
    parameters:
      - schema:
          type: string
        name: itemId
        in: path
        required: true
    get:
      summary: Get item
      tags:
        - Recycle Bin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecycleBinResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-recycle-bin-itemId
      description: Retrieves a recycle bin item.
    delete:
      summary: Delete item
      tags:
        - Recycle Bin
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Links'
      operationId: delete-recycle-bin-itemId
      description: |-
        Remove a recycle bin item

        > This will also hard delete the model associated with the recycle bin item, this action is not reversable and will cause loss of data.
  '/versions/{modelId}/restore':
    parameters:
      - schema:
          type: string
        name: modelId
        in: path
        required: true
    post:
      summary: Restore model
      tags:
        - Versioning
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: post-versions-modelId-restore
      description: Restores a model version
  /:
    get:
      summary: Get root
      tags:
        - Root
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Root'
              examples:
                root-example:
                  value:
                    version: 0.9.0_beta
                    locale: en
                    channel:
                      id: 92weawd23
                      name: Webstore
                      handle: webstore
                      url: 'http://storefront.test'
                      default: true
                    currency:
                      id: q3e33wede
                      name: British Pound
                      code: GBP
                      enabled: true
                      format: '£{price}'
                      decimal_point: .
                      thousand_point: ','
                      default: true
      operationId: get
      description: Returns information about the API
  /payments/types:
    get:
      summary: Payment types
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTypeCollection'
      operationId: get-payments-types
      description: Returns a list of available Payment Types in the system
components:
  schemas:
    Error:
      title: Error
      type: object
      properties:
        error:
          type: object
          properties:
            http_code:
              example: 404
              type: integer
            message:
              type: string
              example: Resource not found
    Links:
      title: Links
      type: object
      properties:
        first:
          type: string
        last:
          type: string
        prev:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
    Address:
      title: Address
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        address:
          type: string
        address_two:
          type: string
        address_three:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          $ref: './countries/responses/CountryResponse.yaml'
        postal_code:
          type: string
        salutation:
          type: string
        default:
          type: boolean
        shipping:
          type: boolean
        delivery:
          type: boolean
        delivery_instructions:
          type: string
        meta:
          anyOf:
            - type: object
            - type: array
              items: {}
        last_used_at:
          type: string

    Permission:
      title: Permission
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        guard_name:
          type: string
      x-tags:
        - ACL
        - Authentication
    Role:
      title: Role
      type: object
      x-tags:
        - ACL
        - Authentication
      properties:
        id:
          type: string
        name:
          type: string
        guard_name:
          type: string
        permissions:
          $ref: '#/components/schemas/PermissionCollection'



    Unauthenticated:
      title: Unauthenticated
      type: object
      properties:
        error:
          type: string
      x-examples:
        example:
          error: Unauthenticated.
      x-tags:
        - Statuses
    Transaction:
      title: Transaction
      type: object
      properties:
        id:
          type: string
        transaction_id:
          type: string
        merchant:
          type: string
        amount:
          type: integer
          format: int32
        card_type:
          type: string
        last_four:
          type: string
        provider:
          type: string
        driver:
          type: string
        success:
          type: boolean
        refund:
          type: boolean
        address_matched:
          type: boolean
        cvc_matched:
          type: boolean
        threed_secure:
          type: boolean
        postcode_matched:
          type: boolean
        status:
          type: string
        notes:
          type: string
        created_at:
          type: string
          format: date
      x-examples:
        normal-example:
          id: 2sef73d8ssefsf8
          transaction_id: 1234-1234-1234-1234
          merchant: mystorefront
          amount: 7845
          card_type: Visa
          last_four: '1234'
          provider: SagePay
          driver: sagepay
          success: true
          refund: false
          address_matched: true
          cvc_matched: true
          threed_secure: true
          postcode_matched: true
          status: Ok
          notes: null
          created_at: '2020-04-30T11:44:34.000000Z'
    Language:
      title: Language
      type: object
      x-examples:
        language-example:
          id: 6z8m9gmj
          name: English
          lang: en
          iso: gb
          default: 1
          enabled: 1
          current: false
      properties:
        id:
          type: string
        name:
          type: string
        lang:
          type: string
        iso:
          type: string
        default:
          type: boolean
        enabled:
          type: boolean
        current:
          type: boolean
      required:
        - id
      description: ''

    ShippingPrice:
      title: ShippingPrice
      type: object
      description: "###\_Available Includes\n\n- method\n- zone\n- currency\n- customer_groups"
      x-examples:
        example-with-zone-method:
          id: ujafe83dd
          rate: 795
          tax: 159
          fixed: true
          min_basket: 0
          min_basket_tax: 0
          min_weight: '0.00000'
          weight_unit: kg
          min_height: '0.00000'
          height_unit: cm
          min_width: '0.00000'
          width_unit: cm
          min_depth: '0.00000'
          depth_unit: cm
          min_volume: '0.00000'
          volume_unit: l
          method:
            data:
              id: v5ters33
              type: regional
              name: Standard Delivery
              description: Standard delivery
              code: ND
          zone:
            data:
              id: awd012es
              name: Region 1
      properties:
        id:
          type: string
        rate:
          type: integer
          format: int32
        tax:
          type: integer
          format: int32
        fixed:
          type: boolean
        min_basket:
          type: integer
          description: Minimum basket total to be eligible
        min_basket_tax:
          type: integer
        min_weight:
          type: string
        weight_unit:
          type: string
        min_height:
          type: string
        height_unit:
          type: string
        min_width:
          type: string
        width_unit:
          type: string
        min_depth:
          type: string
        depth_unit:
          type: string
        min_volume:
          type: string
        volume_unit:
          type: string
        method:
          $ref: '#/components/schemas/ShippingMethodResponse'
        zone:
          $ref: '#/components/schemas/ShippingZoneResponse'
    PaymentProvider:
      title: PaymentProvider
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        client_token:
          type: string
          description: |
            If supported
        exires_at:
          type: string
          description: If supported
      x-examples:
        provider-example:
          name: SagePay
          client_token: 123456-1234-1234-1234-123456789
          exires_at: '2020-04-03T13:24:23.211000Z'



    SavedSearch:
      title: SavedSearch
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        payload:
          type: object
      x-examples:
        saved-search-example:
          id: wz6d39dj
          name: Red Sweets
          payload:
            keywords: Red sweets
    Setting:
      title: Setting
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        handle:
          type: string
        content:
          type: object
      x-examples:
        products-example:
          id: v8l4pl01
          name: Products
          handle: products
          content:
            transforms:
              - large_thumbnail
            asset_source: products
    ShippingZone:
      title: ShippingZone
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      x-examples:
        basic-example:
          id: v8l4pl01
          name: Van Delivery Area
    ShippingMethod:
      allOf:
        - type: object
          properties:
            type:
              type: string
        - $ref: '#/components/schemas/AttributeData'
        - $ref: '#/components/schemas/LocalisedAttributeData'
      x-examples:
        translated-example:
          id: v8l4pl01
          type: regional
          name: Standard Delivery
          description: Next working day
        full-response-example:
          id: v8l4pl01
          type: regional
          attribute_data:
            name:
              webstore:
                en: Standard Delivery
            description:
              webstore:
                en: Next Working Day
    Tag:
      title: Tag
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    User:
      title: User
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Unauthorized:
      title: Unauthorized
      type: object
      properties:
        error:
          type: string
      x-examples:
        unauthorized-example:
          error: Unauthorized.
    RecycleBin:
      title: Recycle Bin
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
        thumbnail:
          type: string
        deleted_at:
          type: string
        recyclable:
          type: object
    PaginatedResponse:
      title: PaginatedResponse
      type: object
      properties:
        meta:
          $ref: './global/models/Pagination.yaml'
        links:
          $ref: '#/components/schemas/Links'



    Root:
      title: Root
      type: object
      properties:
        version:
          type: string
        locale:
          type: string
        channel:
          type: string
        currency:
          type: string

    CustomerGroupResponse:
      title: CustomerGroupResponse
      type: object
      properties:
        data:
          $ref: './customer-groups/models/CustomerGroup.yaml'
    AddressResponse:
      title: AddressResponse
      type: object
      properties:
        data:
          $ref: './addresses/models/Address.yaml'
    AddressCollection:
      title: AddressCollection
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/PaginatedResponse'
    LanguageCollection:
      title: LanguageCollection
      allOf:
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Language'
        - $ref: '#/components/schemas/PaginatedResponse'
    LanguageResponse:
      title: LanguageResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Language'

    OrderResponse:
      title: OrderResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Order'
    PaymentProviderResponse:
      title: PaymentProviderResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PaymentProvider'
    PaymentProviderCollection:
      title: PaymentProviderCollection
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PaymentProvider'
        - $ref: '#/components/schemas/PaginatedResponse'
    PermissionResponse:
      title: PermissionResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Permission'
    PermissionCollection:
      title: PermissionCollection
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Permission'
        - $ref: '#/components/schemas/PaginatedResponse'
    ProductVariantResponse:
      title: ProductVariantResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProductVariant'
    RecycleBinCollection:
      title: RecycleBinCollection
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RecycleBin'
        - $ref: '#/components/schemas/PaginatedResponse'
    RoleResponse:
      title: RoleResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Role'
    RoleCollection:
      title: RoleCollection
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Role'
        - $ref: '#/components/schemas/PaginatedResponse'
    SavedSearchResponse:
      title: SavedSearchResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SavedSearch'
    SavedSearchCollection:
      title: SavedSearchCollection
      allOf:
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SavedSearch'
      type: object
    SettingResponse:
      title: SettingResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Setting'
    SettingCollection:
      title: SettingCollection
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Setting'
    ShippingMethodResponse:
      title: ShippingMethodResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ShippingMethod'
    ShippingMethodCollection:
      title: ShippingMethodCollection
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ShippingMethod'
        - $ref: '#/components/schemas/PaginatedResponse'
    ShippingPriceCollection:
      title: ShippingPriceCollection
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ShippingPrice'
    ShippingPriceResponse:
      title: ShippingPriceResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ShippingPrice'
    ShippingZoneResponse:
      title: ShippingZoneResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ShippingZone'
    ShippingZoneCollection:
      title: ShippingZoneCollection
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ShippingZone'
        - $ref: '#/components/schemas/PaginatedResponse'




    TransactionResponse:
      title: TransactionResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Transaction'
    TransactionCollection:
      title: TransactionCollection
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
        - $ref: '#/components/schemas/PaginatedResponse'
    RecycleBinResponse:
      title: RecycleBinResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RecycleBin'

    OrderType:
      title: OrderType
      type: object
      properties:
        label:
          type: string
    OrderTypeCollection:
      title: OrderTypeCollection
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrderType'
    EmailPreview:
      title: EmailPreview
      type: object
      properties:
        subject:
          type: string
        content:
          type: string
    EmailPreviewResponse:
      title: EmailPreviewResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmailPreview'
    OrderExport:
      title: OrderExport
      type: object
      properties:
        format:
          type: string
        content:
          type: string
    OrderExportResponse:
      title: OrderExportResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrderExport'
    Invoice:
      title: Invoice
      type: object
      properties:
        encoding:
          type: string
        content:
          type: string
    InvoiceResponse:
      title: InvoiceResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Invoice'
    Search:
      oneOf:
        - $ref: '#/components/schemas/Product'
        - $ref: '#/components/schemas/Category'
    SearchResponse:
      type: object
      title: ''
      x-tags:
        - Search
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Search'
        meta:
          allOf:
            - $ref: './global/models/Pagination.yaml'
            - type: object
              properties:
                aggregation:
                  type: object
                  properties:
                    available:
                      type: array
                      items:
                        $ref: '#/components/schemas/Aggregation'
                    applied:
                      type: array
                      items:
                        $ref: '#/components/schemas/Aggregation'
        links:
          $ref: '#/components/schemas/Links'
      description: ''
    AttributesOrderUnprocessableResponse:
      title: AttributesOrderUnprocessableResponse
      type: object
      properties:
        attributes:
          type: array
          items:
            type: string
    ReorderAttributesUnprocessableResponse:
      title: ReorderAttributesUnprocessableResponse
      type: object
      properties:
        id:
          type: string
    AccountPasswordResetBody:
      title: PasswordResetBody
      type: object
      properties:
        password_confirmation:
          type: string
        password:
          type: string
        current_password:
          type: string
      required:
        - current_password
        - password
        - password_confirmation
    UpdateChannelBody:
      $ref: './channels/requests/CreateChannelBody.yaml'
    UpdateAttributesBody:
      title: UpdateAttributesBody
      type: object
      properties:
        attributes:
          type: object
      required:
        - attributes
    UpdateAttributeBody:
      title: UpdateAttributeBody
      type: object
      properties:
        attributes:
          type: object
      required:
        - attributes
    AssetsInclude:
      title: AssetsInclude
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
    PaymentType:
      title: PaymentType
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        handle:
          type: string
        driver:
          type: string
        success_status:
          type: string
    PaymentTypeResponse:
      title: PaymentTypeResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PaymentType'
    PaymentTypeCollection:
      title: PaymentTypeCollection
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PaymentType'
        - $ref: '#/components/schemas/PaginatedResponse'
    Aggregation:
      title: Aggregation
      type: object
      properties:
        handle:
          type: string
        doc_count:
          type: integer
        data:
          type: object
        buckets:
          type: array
          items: {}
    Country:
      title: Country
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        region:
          type: string
        iso_a_2:
          type: string
        iso_a_3:
          type: string
        iso_numeric:
          type: string
    CountryResponse:
      title: CountryResponse
      type: object
      properties:
        data:
          $ref: './countries/models/Country.yaml'
      x-tags:
        - Countries
    CreateAddressBody:
      title: CreateAddressBody
      type: object
      properties:
        salutation:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        company_name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        address_two:
          type: string
        address_three:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country_id:
          type: string
        shipping:
          type: boolean
        user_id:
          type: string
        billing:
          type: boolean
        default:
          type: boolean
        last_used_at:
          type: string
        delivery_instructions:
          type: string
        meta:
          type: array
          items: {}
      required:
        - firstname
        - lastname
        - address
        - city
        - state
        - postal_code
        - country_id
      x-tags:
        - Addresses
    UpdateAddressBody:
      title: UpdateAddressBody
      type: object
      x-tags:
        - Addresses
      properties:
        salutation:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        company_name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        address_two:
          type: string
        address_three:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country_id:
          type: string
        shipping:
          type: boolean
        billing:
          type: boolean
        default:
          type: boolean
        last_used_at:
          type: string
        delivery_instructions:
          type: string
        meta:
          type: array
          items: {}
  securitySchemes:
    auth:
      type: oauth2
      flows:
        password:
          tokenUrl: 'http://localhost:3000/api/v1/oauth/token'
          refreshUrl: 'http://localhost:3000/api/v1/oauth/refresh'
          scopes: {}
        clientCredentials:
          tokenUrl: 'http://localhost:3000/api/v1/oauth/token'
          scopes: {}
          refreshUrl: 'http://localhost:3000/api/v1/oauth/refresh'
      description: ''
tags:
  - name: Channels
    description: Store channels
  - name: Categories
    description: Catalogue Management
  - name: Authentication
    description: Everything to authenticate requests
  - name: Orders
    description: Order Processing
  - name: Attributes
    description: Catalogue Management
  - name: Assets
    description: Catalogue Management
  - name: Associations
    description: Catalogue Management
  - name: Baskets
    description: Order Processing
  - name: Payments
    description: Order Processing
  - name: Collections
    description: Catalogue Management
  - name: Customers
    description: Order Processing
  - name: Discounts
    description: Order Processing
  - name: Languages
    description: System Settings
  - name: Layouts
    description: Catalogue Management
  - name: Products
    description: Catalogue Management
  - name: Product Variants
    description: Catalogue Management
  - name: Taxes
    description: System Settings
